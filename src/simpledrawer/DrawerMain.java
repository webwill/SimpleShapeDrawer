/*
 * DrawerMain.java
 *
 * @author Gill Windall
 *
 * A very simple drawing program.
 *
 * The UI for the class has been created using NetBeans GUI Builder.  If you
 * wish to edit the parts generated by the form editor you have two choices:
 * 1) Use a text editor to remove the "editor" comments that NetBeans uses
 * to identify the parts that should not be edited.  This is a one way trip. 
 * Once you have done this you won't be able to use the NetBeans GUI editor 
 * any more for this class
 * 2) Work out how to use the "Code" feature on the property editor in NetBeans
 * to customise the generated code.  You can do most things by use of properties 
 * such as "Pre-Init Code" and "Post-Init Code"
 */
package simpledrawer;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

public class DrawerMain extends javax.swing.JFrame {

    private DrawingPanel drawingPanel; // the drawing panel
    
    /**
     * Initialise the components in the screen and then cast a reference to the
     * panel that will be drawn on so it can be used elsewhere.
     */
    public DrawerMain() {
        initComponents();
        drawingPanel = (DrawingPanel) panDrawingArea;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpShape = new javax.swing.ButtonGroup();
        panControls = new javax.swing.JPanel();
        panScroller = new javax.swing.JPanel();
        panRedScroller = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        scrRed = new javax.swing.JScrollBar();
        txtRed = new javax.swing.JTextField();
        panGreenScroller = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        scrGreen = new javax.swing.JScrollBar();
        txtGreen = new javax.swing.JTextField();
        panBlueScroller = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        scrBlue = new javax.swing.JScrollBar();
        txtBlue = new javax.swing.JTextField();
        panBrightness = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        scrBrightness = new javax.swing.JScrollBar();
        labBrightness = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panMoreControls = new javax.swing.JPanel();
        panShape = new javax.swing.JPanel();
        radLine = new javax.swing.JRadioButton();
        radOval = new javax.swing.JRadioButton();
        radTriangle = new javax.swing.JRadioButton();
        radRectangle = new javax.swing.JRadioButton();
        newShape = new javax.swing.JRadioButton();
        panThickness = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scrBackgroundRedScroller1 = new javax.swing.JScrollBar();
        txtThickness = new javax.swing.JTextField();
        panRotate = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        panButtons = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        panLoad = new javax.swing.JPanel();
        btnLoadXML = new javax.swing.JButton();
        btnLoadJSON = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        resetButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        panRedScroller1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        backgroundRedScroller = new javax.swing.JScrollBar();
        redTextBackground = new javax.swing.JTextField();
        panGreenScroller1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        backgroundGreenScroller = new javax.swing.JScrollBar();
        greenTextBackground = new javax.swing.JTextField();
        panBlueScroller1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        backgroundBlueScroller = new javax.swing.JScrollBar();
        blueTextBackground = new javax.swing.JTextField();
        resetBackground = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TimeLabel = new java.awt.Label();
        startTimerButton = new javax.swing.JButton();
        panDrawingArea = new DrawingPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Draw");
        setMinimumSize(new java.awt.Dimension(1049, 739));

        panControls.setPreferredSize(new java.awt.Dimension(270, 300));
        panControls.setLayout(new java.awt.BorderLayout());

        panScroller.setPreferredSize(new java.awt.Dimension(200, 100));
        panScroller.setLayout(new java.awt.GridLayout(4, 0));

        panRedScroller.setPreferredSize(new java.awt.Dimension(200, 26));
        panRedScroller.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Red");
        jLabel4.setPreferredSize(new java.awt.Dimension(35, 14));
        panRedScroller.add(jLabel4);

        scrRed.setMaximum(256);
        scrRed.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scrRed.setVisibleAmount(1);
        scrRed.setPreferredSize(new java.awt.Dimension(150, 16));
        scrRed.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrColourAdjustmentHandler(evt);
            }
        });
        panRedScroller.add(scrRed);

        txtRed.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRed.setText("0");
        txtRed.setPreferredSize(new java.awt.Dimension(50, 20));
        panRedScroller.add(txtRed);

        panScroller.add(panRedScroller);

        panGreenScroller.setPreferredSize(new java.awt.Dimension(200, 26));
        panGreenScroller.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("Green");
        jLabel5.setPreferredSize(new java.awt.Dimension(35, 14));
        panGreenScroller.add(jLabel5);

        scrGreen.setMaximum(256);
        scrGreen.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scrGreen.setVisibleAmount(1);
        scrGreen.setPreferredSize(new java.awt.Dimension(150, 16));
        scrGreen.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrColourAdjustmentHandler(evt);
            }
        });
        panGreenScroller.add(scrGreen);

        txtGreen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGreen.setText("0");
        txtGreen.setPreferredSize(new java.awt.Dimension(50, 20));
        panGreenScroller.add(txtGreen);

        panScroller.add(panGreenScroller);

        panBlueScroller.setPreferredSize(new java.awt.Dimension(200, 26));
        panBlueScroller.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setText("Blue");
        jLabel6.setPreferredSize(new java.awt.Dimension(35, 14));
        panBlueScroller.add(jLabel6);

        scrBlue.setMaximum(256);
        scrBlue.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scrBlue.setVisibleAmount(1);
        scrBlue.setPreferredSize(new java.awt.Dimension(150, 16));
        scrBlue.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrColourAdjustmentHandler(evt);
            }
        });
        panBlueScroller.add(scrBlue);

        txtBlue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBlue.setText("0");
        txtBlue.setPreferredSize(new java.awt.Dimension(50, 20));
        panBlueScroller.add(txtBlue);

        panScroller.add(panBlueScroller);

        panBrightness.setMinimumSize(new java.awt.Dimension(270, 111));
        panBrightness.setPreferredSize(new java.awt.Dimension(346, 100));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Brightness");
        panBrightness.add(jLabel3);

        scrBrightness.setMaximum(110);
        scrBrightness.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scrBrightness.setValue(50);
        scrBrightness.setPreferredSize(new java.awt.Dimension(150, 16));
        scrBrightness.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrBrightnessAdjustmentValueChanged(evt);
            }
        });
        panBrightness.add(scrBrightness);

        labBrightness.setBackground(new java.awt.Color(126, 126, 126));
        labBrightness.setText("           ");
        labBrightness.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        labBrightness.setOpaque(true);
        panBrightness.add(labBrightness);

        jButton1.setText("jButton1");
        panBrightness.add(jButton1);

        panScroller.add(panBrightness);

        panControls.add(panScroller, java.awt.BorderLayout.NORTH);

        panMoreControls.setLayout(new java.awt.GridLayout(5, 0));

        panShape.setName(""); // NOI18N
        panShape.setPreferredSize(new java.awt.Dimension(253, 53));

        grpShape.add(radLine);
        radLine.setSelected(true);
        radLine.setText("Line");
        radLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radShapeActionPerformed(evt);
            }
        });
        panShape.add(radLine);

        grpShape.add(radOval);
        radOval.setText("Oval");
        radOval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radShapeActionPerformed(evt);
            }
        });
        panShape.add(radOval);

        grpShape.add(radTriangle);
        radTriangle.setText("Triangle");
        radTriangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radShapeActionPerformed(evt);
            }
        });
        panShape.add(radTriangle);

        grpShape.add(radRectangle);
        radRectangle.setText("Rectangle");
        radRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radShapeActionPerformed(evt);
            }
        });
        panShape.add(radRectangle);

        grpShape.add(newShape);
        newShape.setText("New Shape");
        newShape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radShapeActionPerformed(evt);
            }
        });
        panShape.add(newShape);

        panMoreControls.add(panShape);

        panThickness.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Thickness");
        panThickness.add(jLabel1);

        scrBackgroundRedScroller1.setMaximum(40);
        scrBackgroundRedScroller1.setMinimum(1);
        scrBackgroundRedScroller1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scrBackgroundRedScroller1.setVisibleAmount(1);
        scrBackgroundRedScroller1.setPreferredSize(new java.awt.Dimension(100, 16));
        scrBackgroundRedScroller1.setRequestFocusEnabled(true);
        scrBackgroundRedScroller1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrBackgroundRedScroller1setColourBackgroundScroller(evt);
            }
        });
        panThickness.add(scrBackgroundRedScroller1);

        txtThickness.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtThickness.setText("0");
        txtThickness.setPreferredSize(new java.awt.Dimension(50, 20));
        txtThickness.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                handleThickness(evt);
            }
        });
        panThickness.add(txtThickness);

        panMoreControls.add(panThickness);

        panRotate.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("Rotate");
        panRotate.add(jLabel2);

        btnLeft.setText("Left");
        btnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftActionPerformed(evt);
            }
        });
        panRotate.add(btnLeft);

        btnRight.setText("Right");
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });
        panRotate.add(btnRight);

        panMoreControls.add(panRotate);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        panButtons.add(btnClear);

        panMoreControls.add(panButtons);

        btnLoadXML.setText("load XML");
        btnLoadXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadXMLActionPerformed(evt);
            }
        });
        panLoad.add(btnLoadXML);

        btnLoadJSON.setText("load JSON");
        btnLoadJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadJSONActionPerformed(evt);
            }
        });
        panLoad.add(btnLoadJSON);

        panMoreControls.add(panLoad);

        panControls.add(panMoreControls, java.awt.BorderLayout.SOUTH);

        jPanel1.setMinimumSize(new java.awt.Dimension(83, 130));
        jPanel1.setPreferredSize(new java.awt.Dimension(1435, 350));
        jPanel1.setRequestFocusEnabled(false);

        resetButton.setText("Reset");
        resetButton.setMaximumSize(new java.awt.Dimension(200, 23));
        resetButton.setMinimumSize(new java.awt.Dimension(200, 23));
        resetButton.setPreferredSize(new java.awt.Dimension(250, 23));
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resetButtonMousePressed(evt);
            }
        });
        jPanel1.add(resetButton);

        jLabel7.setText("Background Colour");
        jPanel1.add(jLabel7);

        panRedScroller1.setPreferredSize(new java.awt.Dimension(270, 26));
        panRedScroller1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel10.setText("Red");
        jLabel10.setPreferredSize(new java.awt.Dimension(35, 14));
        panRedScroller1.add(jLabel10);

        backgroundRedScroller.setForeground(new java.awt.Color(240, 240, 245));
        backgroundRedScroller.setMaximum(256);
        backgroundRedScroller.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        backgroundRedScroller.setVisibleAmount(1);
        backgroundRedScroller.setMinimumSize(new java.awt.Dimension(5, 16));
        backgroundRedScroller.setPreferredSize(new java.awt.Dimension(150, 16));
        backgroundRedScroller.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                backgroundColourHandler(evt);
            }
        });
        panRedScroller1.add(backgroundRedScroller);

        redTextBackground.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        redTextBackground.setText("0");
        redTextBackground.setPreferredSize(new java.awt.Dimension(50, 20));
        panRedScroller1.add(redTextBackground);

        jPanel1.add(panRedScroller1);

        panGreenScroller1.setPreferredSize(new java.awt.Dimension(270, 26));
        panGreenScroller1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel9.setText("Green");
        jLabel9.setPreferredSize(new java.awt.Dimension(35, 14));
        panGreenScroller1.add(jLabel9);

        backgroundGreenScroller.setMaximum(256);
        backgroundGreenScroller.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        backgroundGreenScroller.setVisibleAmount(1);
        backgroundGreenScroller.setMinimumSize(new java.awt.Dimension(5, 16));
        backgroundGreenScroller.setPreferredSize(new java.awt.Dimension(150, 16));
        backgroundGreenScroller.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                backgroundGreenScrollerbackgroundColourHandler(evt);
            }
        });
        panGreenScroller1.add(backgroundGreenScroller);

        greenTextBackground.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        greenTextBackground.setText("0");
        greenTextBackground.setPreferredSize(new java.awt.Dimension(50, 20));
        panGreenScroller1.add(greenTextBackground);

        jPanel1.add(panGreenScroller1);

        panBlueScroller1.setPreferredSize(new java.awt.Dimension(270, 26));
        panBlueScroller1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel8.setText("Blue");
        jLabel8.setPreferredSize(new java.awt.Dimension(35, 14));
        panBlueScroller1.add(jLabel8);

        backgroundBlueScroller.setMaximum(256);
        backgroundBlueScroller.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        backgroundBlueScroller.setVisibleAmount(1);
        backgroundBlueScroller.setMinimumSize(new java.awt.Dimension(5, 16));
        backgroundBlueScroller.setPreferredSize(new java.awt.Dimension(150, 16));
        backgroundBlueScroller.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                backgroundBlueScrollerbackgroundColourHandler(evt);
            }
        });
        panBlueScroller1.add(backgroundBlueScroller);

        blueTextBackground.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        blueTextBackground.setText("0");
        blueTextBackground.setPreferredSize(new java.awt.Dimension(50, 20));
        panBlueScroller1.add(blueTextBackground);
        blueTextBackground.getAccessibleContext().setAccessibleParent(panRedScroller1);

        jPanel1.add(panBlueScroller1);

        resetBackground.setText("Reset");
        resetBackground.setMaximumSize(new java.awt.Dimension(200, 23));
        resetBackground.setMinimumSize(new java.awt.Dimension(200, 23));
        resetBackground.setPreferredSize(new java.awt.Dimension(250, 23));
        resetBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resetBackground(evt);
            }
        });
        jPanel1.add(resetBackground);

        jPanel2.setPreferredSize(new java.awt.Dimension(250, 100));

        TimeLabel.setText("Time: 00:00:30");
        jPanel2.add(TimeLabel);

        startTimerButton.setText("Start");
        startTimerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startTimerButtonMousePressed(evt);
            }
        });
        startTimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTimerButtonActionPerformed(evt);
            }
        });
        jPanel2.add(startTimerButton);

        jPanel1.add(jPanel2);

        panControls.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(panControls, java.awt.BorderLayout.WEST);

        panDrawingArea.setBackground(new java.awt.Color(255, 255, 255));
        panDrawingArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panDrawingArea.setFocusCycleRoot(true);
        panDrawingArea.setPreferredSize(new java.awt.Dimension(700, 650));

        jButton2.setText("Change current shape change");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeColourButton(evt);
            }
        });

        javax.swing.GroupLayout panDrawingAreaLayout = new javax.swing.GroupLayout(panDrawingArea);
        panDrawingArea.setLayout(panDrawingAreaLayout);
        panDrawingAreaLayout.setHorizontalGroup(
            panDrawingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDrawingAreaLayout.createSequentialGroup()
                .addGap(0, 551, Short.MAX_VALUE)
                .addComponent(jButton2))
        );
        panDrawingAreaLayout.setVerticalGroup(
            panDrawingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDrawingAreaLayout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 739, Short.MAX_VALUE))
        );

        getContentPane().add(panDrawingArea, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* rotate the drawing 90 degrees to the left */
    private void btnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftActionPerformed
        drawingPanel.rotate(-90);
    }//GEN-LAST:event_btnLeftActionPerformed
    /* clear the drawing */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        drawingPanel.clearDisplay();
    }//GEN-LAST:event_btnClearActionPerformed

    /* set the drawing colours */
    private void scrColourAdjustmentHandler(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scrColourAdjustmentHandler
        int currentRed, currentGreen, currentBlue;
        currentRed = (255 - scrRed.getValue());
        currentGreen = (255 - scrGreen.getValue());
        currentBlue = (255 - scrBlue.getValue());
        txtRed.setText(currentRed + "");
        txtGreen.setText(currentGreen + "");
        txtBlue.setText(currentBlue + "");
        drawingPanel.setCurrentColor(new Color(currentRed, currentGreen, currentBlue));

    }//GEN-LAST:event_scrColourAdjustmentHandler

    /* change the type of shape to be drawn */
    private void radShapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radShapeActionPerformed
        if (radLine.isSelected()) {
            drawingPanel.setCurrentShapeType(ShapeType.LINE);
            return;
        }
        if (radOval.isSelected()) {
            drawingPanel.setCurrentShapeType(ShapeType.OVAL);
            return;
        }

        if (radTriangle.isSelected()) {
            drawingPanel.setCurrentShapeType(ShapeType.TRIANGLE);
            return;
        }
        if(radRectangle.isSelected()){
                drawingPanel.setCurrentShapeType(ShapeType.RECTANGLE);
                System.out.println("This is being checked");
                return ;
        }if(newShape.isSelected()){
            String tempInput = JOptionPane.showInputDialog("Enter how many sildes for the shape");
            System.out.println(tempInput);
            if(!(tempInput == null)){
            
            int input = Integer.parseInt(tempInput);
            
             drawingPanel.setShapeSildes(input);
             drawingPanel.setCurrentShapeType(ShapeType.NEWSHAPE);
             
             getCanvasWidth();
            }else{
                radLine.setSelected(true);
            }
        }
    }//GEN-LAST:event_radShapeActionPerformed

   /* rotate the drawing 90 degrees to the right */
    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        drawingPanel.rotate(90);
    }//GEN-LAST:event_btnRightActionPerformed

    private void btnLoadXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadXMLActionPerformed
        try {
            XMLShapeReader shapeReader = new XMLShapeReader();

            shapeReader.getShapesFromFile("stored_shapes.xml");
            List listOfShapes = shapeReader.getSlList();
            drawingPanel.setShapes(listOfShapes);
            drawingPanel.repaint();

        } catch (ParserConfigurationException | SAXException | IOException ex) {
            Logger.getLogger(XMLShapeReader.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnLoadXMLActionPerformed

    private void btnLoadJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadJSONActionPerformed

        try {
            JSONShapeReader shapeReader = new JSONShapeReader();
            shapeReader.getShapesFromFile("stored_shapes.json");
            List listOfShapes = shapeReader.getSlList();
            drawingPanel.setShapes(listOfShapes);
            drawingPanel.repaint();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DrawerMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnLoadJSONActionPerformed
    
    
    
    private void scrBrightnessAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scrBrightnessAdjustmentValueChanged
        float currentBrightness = scrBrightness.getValue();
        int colourValue = (int) (255 * ((100 - currentBrightness) / 100));
        labBrightness.setBackground(new Color(colourValue, colourValue, colourValue));
        drawingPanel.setCurrentBrightness((100 - currentBrightness) / 100);
    }//GEN-LAST:event_scrBrightnessAdjustmentValueChanged

    private void resetButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMousePressed
        // TODO add your handling code here:
        
        //reset all the scroller
        scrBlue.setValue(0);
        scrRed.setValue(0);
        scrGreen.setValue(0);
        scrBrightness.setValue(50);
    }//GEN-LAST:event_resetButtonMousePressed

    private void resetBackground(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBackground
        // TODO add your handling code here:
     
        drawingPanel.setBackground(Color.WHITE);
        
    }//GEN-LAST:event_resetBackground
    private String currentInput = "";
    
    public Dimension getCanvasWidth(){
       return panDrawingArea.getPreferredSize();
    }
    
    private void handleThickness(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_handleThickness
        // TODO add your handling code here:
         int thickness = 5;
        String input =  txtThickness.getText();
        int key = evt.getKeyCode();
       
        
     
        if( key <= KeyEvent.VK_9 && key >= KeyEvent.VK_0 && !(txtThickness.getText().equals(""))){
            System.out.println("This is meant");
            thickness = Integer.parseInt(input.trim());
            if (!(thickness > 0 &&  thickness <= 40) ) {
                int result = JOptionPane.showConfirmDialog( null, "You need to number between 1 and 40","alert", JOptionPane.OK_CANCEL_OPTION);
            }
       thickness = (thickness > 0 && thickness < 41 )? thickness : 5; 
       
       txtThickness.setText(""+thickness);
       drawingPanel.setCurrentThickness(thickness);
        }else{
            if(!(txtThickness.getText().isEmpty())){
            //int result = JOptionPane.showConfirmDialog( null, "You need to number between 1 and 40","alert", JOptionPane.OK_CANCEL_OPTION);
            }
            String temp = input.replace(evt.getKeyChar(), ' ');
            temp = temp.trim();
            
            txtThickness.setText(temp);
        }
        
        /* only allow thicknesses in the range 1 to 40 */

       
   

       
      
    }//GEN-LAST:event_handleThickness

    private void scrBackgroundRedScroller1setColourBackgroundScroller(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scrBackgroundRedScroller1setColourBackgroundScroller
        // TODO add your handling code here:
    }//GEN-LAST:event_scrBackgroundRedScroller1setColourBackgroundScroller

    private void startTimerButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startTimerButtonMousePressed
        // TODO add your handling code here:
    Timer timer = new Timer();
    final String timeFormat = "Time: 00:00:";
    
    //int userInput = JOptionPane.showConfirmDialog(Component null,, JOptionPane.OK_CANCEL_OPTION);
        
       
    }//GEN-LAST:event_startTimerButtonMousePressed

    private JScrollBar currentRed, currentGreen, currentBlue;
    
    private void changeColourButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeColourButton
        // TODO add your handling code here:
            
        changeCurrentColourDialog();
        
        
    }//GEN-LAST:event_changeColourButton

    private void startTimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTimerButtonActionPerformed
        // TODO add your handling code here:
        
        int result = JOptionPane.showConfirmDialog((Component) null, "You have 30 secounds to change a square into a " + "8" + " shape",
        "Get Ready", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            System.out.println("This is true");
            
            //prep the canvas
            drawingPanel.clearDisplay();
            drawingPanel.setCurrentShapeType(ShapeType.NOSHAPE);
            drawingPanel.startGame();
        }
        
    }//GEN-LAST:event_startTimerButtonActionPerformed

    private void backgroundColourHandler(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_backgroundColourHandler
       
        backgroundColourHandler();
        
    }//GEN-LAST:event_backgroundColourHandler

    private void backgroundGreenScrollerbackgroundColourHandler(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_backgroundGreenScrollerbackgroundColourHandler
        // TODO add your handling code here:
    }//GEN-LAST:event_backgroundGreenScrollerbackgroundColourHandler

    private void backgroundBlueScrollerbackgroundColourHandler(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_backgroundBlueScrollerbackgroundColourHandler
        // TODO add your handling code here:
    }//GEN-LAST:event_backgroundBlueScrollerbackgroundColourHandler

    public void backgroundColourHandler(){
        
        int red = 255 - backgroundRedScroller.getValue();
        int green = 255 - backgroundGreenScroller.getValue();
        int blue = 255 - backgroundBlueScroller.getValue();
        
        redTextBackground.setText(""+red);
        greenTextBackground.setText(""+green);
        blueTextBackground.setText(""+blue);
    
        drawingPanel.setBackground(new Color(red,green,blue));    
        
    }
    
     private void changeCurrentColour(java.awt.event.AdjustmentEvent evt) {   
         
         int red,green,blue;
         
         red = currentRed.getValue();
         green = currentGreen.getValue();
         blue = currentBlue.getValue();         
         
         Color c = new Color(red,green,blue);
         
         ChangeCurrentShapeColour changeColour = new ChangeCurrentShapeColour();
         changeColour.ChangeColour(c);
     }
    
    public void changeCurrentColourDialog(){

        
        ArrayList<JComponent> uiCom = new ArrayList<JComponent>();
        
        currentRed = new JScrollBar();
        currentGreen = new JScrollBar();
        currentBlue = new JScrollBar();
        
        currentRed.setMaximum(256);
        currentRed.addAdjustmentListener((e) -> {
            changeCurrentColour(e);
        });
        currentGreen.setMaximum(256);
        currentGreen.addAdjustmentListener((e) -> {
            changeCurrentColour(e);
        });
        currentBlue.setMaximum(256);
        currentBlue.addAdjustmentListener((e) -> {
            changeCurrentColour(e);
        });
        
        currentRed.setOrientation(JScrollBar.HORIZONTAL);
        currentGreen.setOrientation(JScrollBar.HORIZONTAL);
        currentBlue.setOrientation(JScrollBar.HORIZONTAL);
        
        currentRed.setVisibleAmount(1);
        currentGreen.setVisibleAmount(1);
        currentBlue.setVisibleAmount(1);
        
        currentRed.setPreferredSize(new   java.awt.Dimension(150, 16));
        currentGreen.setPreferredSize(new java.awt.Dimension(150, 16));
        currentBlue.setPreferredSize(new  java.awt.Dimension(150, 16));
        
        uiCom.add(new JLabel("Choose your new colour!"));
        uiCom.add(new JLabel("Red:"));
        uiCom.add(currentRed);
        uiCom.add(new JLabel("Green:"));
        uiCom.add(currentGreen);
        uiCom.add(new JLabel("Blue:"));
        uiCom.add(currentBlue);

int dialog = JOptionPane.showConfirmDialog(null, uiCom.toArray(),"Choose new Colour", JOptionPane.WARNING_MESSAGE);
            if(dialog == JOptionPane.OK_OPTION){

                
                
            }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

      DrawerMain dm = new  DrawerMain();
              dm.setVisible(true);
                dm.setResizable(false);
        
        

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label TimeLabel;
    private javax.swing.JScrollBar backgroundBlueScroller;
    private javax.swing.JScrollBar backgroundGreenScroller;
    private javax.swing.JScrollBar backgroundRedScroller;
    private javax.swing.JTextField blueTextBackground;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnLoadJSON;
    private javax.swing.JButton btnLoadXML;
    private javax.swing.JButton btnRight;
    private javax.swing.JTextField greenTextBackground;
    private javax.swing.ButtonGroup grpShape;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labBrightness;
    private javax.swing.JRadioButton newShape;
    private javax.swing.JPanel panBlueScroller;
    private javax.swing.JPanel panBlueScroller1;
    private javax.swing.JPanel panBrightness;
    private javax.swing.JPanel panButtons;
    private javax.swing.JPanel panControls;
    private javax.swing.JPanel panDrawingArea;
    private javax.swing.JPanel panGreenScroller;
    private javax.swing.JPanel panGreenScroller1;
    private javax.swing.JPanel panLoad;
    private javax.swing.JPanel panMoreControls;
    private javax.swing.JPanel panRedScroller;
    private javax.swing.JPanel panRedScroller1;
    private javax.swing.JPanel panRotate;
    private javax.swing.JPanel panScroller;
    private javax.swing.JPanel panShape;
    private javax.swing.JPanel panThickness;
    private javax.swing.JRadioButton radLine;
    private javax.swing.JRadioButton radOval;
    private javax.swing.JRadioButton radRectangle;
    private javax.swing.JRadioButton radTriangle;
    private javax.swing.JTextField redTextBackground;
    private javax.swing.JButton resetBackground;
    private javax.swing.JButton resetButton;
    private javax.swing.JScrollBar scrBackgroundRedScroller1;
    private javax.swing.JScrollBar scrBlue;
    private javax.swing.JScrollBar scrBrightness;
    private javax.swing.JScrollBar scrGreen;
    private javax.swing.JScrollBar scrRed;
    private javax.swing.JButton startTimerButton;
    private javax.swing.JTextField txtBlue;
    private javax.swing.JTextField txtGreen;
    private javax.swing.JTextField txtRed;
    private javax.swing.JTextField txtThickness;
    // End of variables declaration//GEN-END:variables
}
